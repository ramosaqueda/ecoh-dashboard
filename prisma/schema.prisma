generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Causa {
  id                        Int               @id @default(autoincrement())
  denominacionCausa         String
  ruc                       String?
  fechaDelHecho             DateTime?
  rit                       String?
  fechaIta                  DateTime?
  numeroIta                 String?
  fechaPpp                  DateTime?
  numeroPpp                 String?
  observacion               String?
  foliobw                   String?
  causaEcoh                 Boolean
  causaLegada               Boolean?
  coordenadasSs             String?
  homicidioConsumado        Boolean?
  constituyeSs              Boolean?
  sinLlamadoEcoh            Boolean?
  fechaHoraTomaConocimiento DateTime?
  comunaId                  Int?
  analistaId                Int?
  fiscalId                  Int?
  focoId                    Int?
  delitoId                  Int?
  abogadoId                 Int?
  tribunalId                Int?
  nacionalidadVictimaId     Int?
  abogado                   Abogado?          @relation(fields: [abogadoId], references: [id])
  analista                  Analista?         @relation(fields: [analistaId], references: [id])
  comuna                    Comuna?           @relation(fields: [comunaId], references: [id])
  delito                    Delito?           @relation(fields: [delitoId], references: [id])
  fiscal                    Fiscal?           @relation(fields: [fiscalId], references: [id])
  foco                      Foco?             @relation(fields: [focoId], references: [id])
  nacionalidadVictima       Nacionalidad?     @relation(fields: [nacionalidadVictimaId], references: [id])
  tribunal                  Tribunal?         @relation(fields: [tribunalId], references: [id])
  imputados                 CausasImputados[]
  actividades              Actividad[]        // Relación con Actividad

  victimas                  CausasVictimas[]
  telefonos                 TelefonoCausa[]   // Nueva relación agregada

 // New relations for related causes
  causasRelacionadasMadre   CausasRelacionadas[] @relation("CausaMadre")
  causasRelacionadasArista  CausasRelacionadas[] @relation("CausaArista")
}

// New model to track cause relationships
model CausasRelacionadas {
  id              Int      @id @default(autoincrement())
  causaMadreId    Int
  causaAristaId   Int
  fechaRelacion   DateTime @default(now())
  observacion     String?
  tipoRelacion    String?  // Para indicar el tipo de relación si es necesario
  
  // Relations to Causa model
  causaMadre      Causa    @relation("CausaMadre", fields: [causaMadreId], references: [id])
  causaArista     Causa    @relation("CausaArista", fields: [causaAristaId], references: [id])

  @@unique([causaMadreId, causaAristaId])
}

model Victima {
  id             Int              @id @default(autoincrement())
  nombreVictima  String
  docId          String
  nacionalidadId Int?
  causas         CausasVictimas[]
  nacionalidad   Nacionalidad?    @relation(fields: [nacionalidadId], references: [id])
}

model Imputado {
  id             Int                    @id @default(autoincrement())
  nombreSujeto   String
  docId          String
  nacionalidadId Int?
  createdAt      DateTime?              @default(now())
  updatedAt      DateTime?              @updatedAt
  causas         CausasImputados[]
  fotoPrincipal String?
  fotografias   Fotografia[]
  nacionalidad   Nacionalidad?          @relation(fields: [nacionalidadId], references: [id])
  organizaciones MiembrosOrganizacion[]
}

model Fotografia {
  id          Int      @id @default(autoincrement())
  url         String?
  filename    String
  esPrincipal Boolean  @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  imputado    Imputado @relation(fields: [imputadoId], references: [id])
  imputadoId  Int
}
model Nacionalidad {
  id        Int        @id @default(autoincrement())
  nombre    String
  causas    Causa[]
  imputados Imputado[]
  victimas  Victima[]
}

model Analista {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Fiscal {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Foco {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Delito {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Abogado {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Tribunal {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model CausasImputados {
  causaId            Int
  imputadoId         Int
  cautelarId         Int?
  fechaFormalizacion DateTime?
  formalizado        Boolean   @default(false)
  esimputado         Boolean   @default(false)
  essujetoInteres    Boolean   @default(false)
  plazo              Int?
  causa              Causa     @relation(fields: [causaId], references: [id])
  cautelar           Cautelar? @relation(fields: [cautelarId], references: [id])
  imputado           Imputado  @relation(fields: [imputadoId], references: [id])

  @@id([causaId, imputadoId])
}

model CausasVictimas {
  causaId   Int
  victimaId Int
  causa     Causa   @relation(fields: [causaId], references: [id])
  victima   Victima @relation(fields: [victimaId], references: [id])

  @@id([causaId, victimaId])
}

model Comuna {
  id     Int     @id @default(autoincrement())
  nombre String
  causas Causa[]
}

model Cautelar {
  id              Int               @id @default(autoincrement())
  nombre          String
  causasImputados CausasImputados[]
}

model TipoOrganizacion {
  id             Int                     @id @default(autoincrement())
  nombre         String
  descripcion    String?
  createdAt      DateTime                @default(now())
  updatedAt      DateTime                @updatedAt
  organizaciones OrganizacionDelictual[]
}

model OrganizacionDelictual {
  id                  Int                    @id @default(autoincrement())
  nombre              String
  descripcion         String?
  fechaIdentificacion DateTime
  activa              Boolean                @default(true)
  tipoOrganizacionId  Int
  createdAt           DateTime               @default(now())
  updatedAt           DateTime               @updatedAt
  miembros            MiembrosOrganizacion[]
  tipoOrganizacion    TipoOrganizacion       @relation(fields: [tipoOrganizacionId], references: [id])
}


model MiembrosOrganizacion {
  id             Int                   @id @default(autoincrement())
  organizacionId Int
  imputadoId     Int
  rol            String?
  fechaIngreso   DateTime
  fechaSalida    DateTime?
  activo         Boolean               @default(true)
  createdAt      DateTime              @default(now())
  updatedAt      DateTime              @updatedAt
  imputado       Imputado              @relation(fields: [imputadoId], references: [id])
  organizacion   OrganizacionDelictual @relation(fields: [organizacionId], references: [id])

  @@unique([organizacionId, imputadoId])
}

model Telefono {
  id                  Int            @id @default(autoincrement())
  numeroTelefonico    String?
  proveedorServicio   Proveedor     @relation(fields: [idProveedorServicio], references: [id])
  idProveedorServicio Int
  imei                String
  abonado             String
  solicitaTrafico     Boolean
  solicitaImei        Boolean
  observacion         String?
  telefonosCausa      TelefonoCausa[]

  @@map("telefonos")
}

model Proveedor {
  id        Int        @id @default(autoincrement())
  nombre    String
  telefonos Telefono[]
  @@map("proveedores")
}

model TelefonoCausa {
  id         Int      @id @default(autoincrement())
  telefono   Telefono @relation(fields: [idTelefono], references: [id])
  causa      Causa    @relation(fields: [idCausa], references: [id])
  idTelefono Int
  idCausa    Int

  @@map("telefonos_causa")
}

model Usuario {
  id            Int       @id @default(autoincrement())
  clerk_id       String    @unique
  email         String    @unique
  nombre        String
  cargo         String?
  rolId         Int       @default(3)  // 3 podría ser el ID para READ
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  actividades   Actividad[]  // Nueva relación
  rol           Rol       @relation(fields: [rolId], references: [id])
 

  @@map("usuarios")
}

model Rol {
  id          Int       @id @default(autoincrement())
  nombre      String    @unique
  descripcion String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  usuarios    Usuario[]

  @@map("roles")
}

// Mantener las definiciones existentes y agregar las nuevas entidades en sintaxis Prisma

enum EstadoActividad {
  inicio
  en_proceso
  terminado
}

model Area {
  id            Int             @id @default(autoincrement())
  nombre        String          @unique
  descripcion   String?
  activo        Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  tiposActividad TipoActividad[]
}

model TipoActividad {
  id          Int          @id @default(autoincrement())
  nombre      String       @unique @db.VarChar(100)
  descripcion String?      @db.VarChar(500)
  areaId      Int
  area        Area         @relation(fields: [areaId], references: [id])
  activo      Boolean      @default(true)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  actividades Actividad[]

  @@index([areaId])
}



model Actividad {
  id              Int            @id @default(autoincrement())
  causa_id        Int            // Cambiado a snake_case
  tipo_actividad_id Int         // Cambiado a snake_case
  usuario_id      Int            // Cambiado a snake_case
  fechaInicio     DateTime
  fechaTermino    DateTime
  estado          EstadoActividad @default(inicio)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  observacion     String?
  causa          Causa          @relation(fields: [causa_id], references: [id])
  tipoActividad  TipoActividad  @relation(fields: [tipo_actividad_id], references: [id])
  usuario        Usuario        @relation(fields: [usuario_id], references: [id])

  @@index([causa_id])
  @@index([tipo_actividad_id])
  @@index([usuario_id])
}